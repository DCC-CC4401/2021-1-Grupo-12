# Generated by Django 3.2 on 2021-04-28 07:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rut', models.CharField(blank=True, max_length=13)),
                ('numero', models.CharField(blank=True, max_length=13)),
                ('red_social', models.URLField(blank=True)),
                ('region', models.CharField(choices=[('Arica y Parinacota', 'Arica y Parinacota'), ('Antofagasta', 'Antofagasta'), ('Tarapacá', 'Tarapacá'), ('Atacama', 'Atacama'), ('Coquimbo', 'Coquimbo'), ('Valparaíso', 'Valparaíso'), ('Región del Libertador Gral. Bernardo O’Higgins', 'Región del Libertador Gral. Bernardo O’Higgins'), ('Región del Maule', 'Región del Maule'), ('Región del Biobío', 'Región del Biobío'), ('Región de la Araucanía', 'Región de la Araucanía'), ('Región de Los Ríos', 'Región de Los Ríos'), ('Región de Los Lagos', 'Región de Los Lagos'), ('Región Aisén del Gral. Carlos Ibáñez del Campo', 'Región Aisén del Gral. Carlos Ibáñez del Campo'), ('Región de Magallanes y de la Antártíca Chilena', 'Región de Magallanes y de la Antártíca Chilena'), ('Región Metropolitana de Santiago', 'Región Metropolitana de Santiago')], max_length=200)),
                ('correo_respaldo', models.EmailField(blank=True, max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(choices=[('N', 'Nuevo'), ('SN', 'Semi nuevo'), ('U', 'Usado')], max_length=2)),
                ('categoria', models.CharField(choices=[('Ac', 'Accesorios'), ('AE', 'Aparatos Electronicos'), ('AF', 'Audio/Foto'), ('AJ', 'Artesania/Joyeria'), ('Cm', 'Camping'), ('Dp', 'Deportes'), ('Hr', 'Herramientas'), ('HM', 'Hogar/Muebles'), ('Jg', 'Juguetes'), ('MP', 'Materia prima'), ('MI', 'Musica/Instrumentos'), ('Lb', 'Libros'), ('PS', 'Peliculas/Series'), ('Rp', 'Ropa'), ('Sl', 'Salud'), ('Tc', 'Tecnologia'), ('Vh', 'Vehiculos'), ('Ot', 'Otros')], max_length=2)),
                ('fotos', models.ImageField(upload_to='uploads/%Y/%m/%d/')),
                ('cambio', models.CharField(choices=[('Ac', 'Accesorios'), ('AE', 'Aparatos Electronicos'), ('AF', 'Audio/Foto'), ('AJ', 'Artesania/Joyeria'), ('Cm', 'Camping'), ('Dp', 'Deportes'), ('Hr', 'Herramientas'), ('HM', 'Hogar/Muebles'), ('Jg', 'Juguetes'), ('MP', 'Materia prima'), ('MI', 'Musica/Instrumentos'), ('Lb', 'Libros'), ('PS', 'Peliculas/Series'), ('Rp', 'Ropa'), ('Sl', 'Salud'), ('Tc', 'Tecnologia'), ('Vh', 'Vehiculos'), ('Ot', 'Otros')], max_length=2)),
                ('fecha', models.DateField(auto_now=True)),
                ('publicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
